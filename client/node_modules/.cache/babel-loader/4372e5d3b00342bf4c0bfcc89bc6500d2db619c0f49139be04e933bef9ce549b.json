{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anesw\\\\OneDrive\\\\Desktop\\\\Software_Engineering_Lab_Projects\\\\SWE_LAB_Project\\\\17530_Apple\\\\client\\\\src\\\\components\\\\ProjectDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport HardwareSet from './HardwareSet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectDetails(props) {\n  _s();\n  const [updatedHardwareSets, setUpdatedHardwareSets] = useState(props.hardwareSets);\n  const handleEnter = hardwareSetId => {\n    const updatedSets = updatedHardwareSets.map(set => {\n      if (set.id === hardwareSetId) {\n        return {\n          ...set,\n          status: 'Updated status'\n        };\n      }\n      return set;\n    });\n    setUpdatedHardwareSets(updatedSets);\n  };\n  const handleCheckIn = hardwareSetId => {\n    const updatedSets = updatedHardwareSets.map(set => {\n      if (set.id === hardwareSetId) {\n        return {\n          ...set,\n          status: 'Checked In'\n        };\n      }\n      return set;\n    });\n    setUpdatedHardwareSets(updatedSets);\n  };\n  const handleCheckOut = hardwareSetId => {\n    const updatedSets = updatedHardwareSets.map(set => {\n      if (set.id === hardwareSetId) {\n        return {\n          ...set,\n          status: 'Checked Out'\n        };\n      }\n      return set;\n    });\n    setUpdatedHardwareSets(updatedSets);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: updatedHardwareSets.map(hardwareSet => /*#__PURE__*/_jsxDEV(HardwareSet, {\n        number: hardwareSet.number,\n        status: hardwareSet.status,\n        onEnter: () => handleEnter(hardwareSet.id),\n        onCheckIn: () => handleCheckIn(hardwareSet.id),\n        onCheckOut: () => handleCheckOut(hardwareSet.id)\n      }, hardwareSet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Members:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n      children: props.members.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"list\", {\n          primary: member.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, member.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectDetails, \"10mROceiW9bjrpc8ylOjlM9Azlc=\");\n_c = ProjectDetails;\nexport default ProjectDetails;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetails\");","map":{"version":3,"names":["React","useState","HardwareSet","jsxDEV","_jsxDEV","ProjectDetails","props","_s","updatedHardwareSets","setUpdatedHardwareSets","hardwareSets","handleEnter","hardwareSetId","updatedSets","map","set","id","status","handleCheckIn","handleCheckOut","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","hardwareSet","number","onEnter","onCheckIn","onCheckOut","members","member","primary","_c","$RefreshReg$"],"sources":["C:/Users/anesw/OneDrive/Desktop/Software_Engineering_Lab_Projects/SWE_LAB_Project/17530_Apple/client/src/components/ProjectDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport HardwareSet from './HardwareSet';\r\n\r\nfunction ProjectDetails(props) {\r\n  const [updatedHardwareSets, setUpdatedHardwareSets] = useState(props.hardwareSets);\r\n\r\n  const handleEnter = (hardwareSetId) => {\r\n    const updatedSets = updatedHardwareSets.map((set) => {\r\n      if (set.id === hardwareSetId) {\r\n        return { ...set, status: 'Updated status' };\r\n      }\r\n      return set;\r\n    });\r\n    setUpdatedHardwareSets(updatedSets);\r\n  };\r\n\r\n  const handleCheckIn = (hardwareSetId) => {\r\n    const updatedSets = updatedHardwareSets.map((set) => {\r\n      if (set.id === hardwareSetId) {\r\n        return { ...set, status: 'Checked In' };\r\n      }\r\n      return set;\r\n    });\r\n    setUpdatedHardwareSets(updatedSets);\r\n  };\r\n\r\n  const handleCheckOut = (hardwareSetId) => {\r\n    const updatedSets = updatedHardwareSets.map((set) => {\r\n      if (set.id === hardwareSetId) {\r\n        return { ...set, status: 'Checked Out' };\r\n      }\r\n      return set;\r\n    });\r\n    setUpdatedHardwareSets(updatedSets);\r\n  };\r\n\r\n  return (\r\n    <div className=\"project\">\r\n      <h3>{props.name}</h3>\r\n      <ul>\r\n        {updatedHardwareSets.map((hardwareSet) => (\r\n          <HardwareSet\r\n            key={hardwareSet.id}\r\n            number={hardwareSet.number}\r\n            status={hardwareSet.status}\r\n            onEnter={() => handleEnter(hardwareSet.id)}\r\n            onCheckIn={() => handleCheckIn(hardwareSet.id)}\r\n            onCheckOut={() => handleCheckOut(hardwareSet.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <h4>Members:</h4>\r\n      <list>\r\n        {props.members.map((member) => (\r\n          <li key={member.id}>\r\n            <list primary={member.name} />\r\n          </li>\r\n        ))}\r\n      </list>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGR,QAAQ,CAACK,KAAK,CAACI,YAAY,CAAC;EAElF,MAAMC,WAAW,GAAIC,aAAa,IAAK;IACrC,MAAMC,WAAW,GAAGL,mBAAmB,CAACM,GAAG,CAAEC,GAAG,IAAK;MACnD,IAAIA,GAAG,CAACC,EAAE,KAAKJ,aAAa,EAAE;QAC5B,OAAO;UAAE,GAAGG,GAAG;UAAEE,MAAM,EAAE;QAAiB,CAAC;MAC7C;MACA,OAAOF,GAAG;IACZ,CAAC,CAAC;IACFN,sBAAsB,CAACI,WAAW,CAAC;EACrC,CAAC;EAED,MAAMK,aAAa,GAAIN,aAAa,IAAK;IACvC,MAAMC,WAAW,GAAGL,mBAAmB,CAACM,GAAG,CAAEC,GAAG,IAAK;MACnD,IAAIA,GAAG,CAACC,EAAE,KAAKJ,aAAa,EAAE;QAC5B,OAAO;UAAE,GAAGG,GAAG;UAAEE,MAAM,EAAE;QAAa,CAAC;MACzC;MACA,OAAOF,GAAG;IACZ,CAAC,CAAC;IACFN,sBAAsB,CAACI,WAAW,CAAC;EACrC,CAAC;EAED,MAAMM,cAAc,GAAIP,aAAa,IAAK;IACxC,MAAMC,WAAW,GAAGL,mBAAmB,CAACM,GAAG,CAAEC,GAAG,IAAK;MACnD,IAAIA,GAAG,CAACC,EAAE,KAAKJ,aAAa,EAAE;QAC5B,OAAO;UAAE,GAAGG,GAAG;UAAEE,MAAM,EAAE;QAAc,CAAC;MAC1C;MACA,OAAOF,GAAG;IACZ,CAAC,CAAC;IACFN,sBAAsB,CAACI,WAAW,CAAC;EACrC,CAAC;EAED,oBACET,OAAA;IAAKgB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBjB,OAAA;MAAAiB,QAAA,EAAKf,KAAK,CAACgB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBtB,OAAA;MAAAiB,QAAA,EACGb,mBAAmB,CAACM,GAAG,CAAEa,WAAW,iBACnCvB,OAAA,CAACF,WAAW;QAEV0B,MAAM,EAAED,WAAW,CAACC,MAAO;QAC3BX,MAAM,EAAEU,WAAW,CAACV,MAAO;QAC3BY,OAAO,EAAEA,CAAA,KAAMlB,WAAW,CAACgB,WAAW,CAACX,EAAE,CAAE;QAC3Cc,SAAS,EAAEA,CAAA,KAAMZ,aAAa,CAACS,WAAW,CAACX,EAAE,CAAE;QAC/Ce,UAAU,EAAEA,CAAA,KAAMZ,cAAc,CAACQ,WAAW,CAACX,EAAE;MAAE,GAL5CW,WAAW,CAACX,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMpB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLtB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBtB,OAAA;MAAAiB,QAAA,EACGf,KAAK,CAAC0B,OAAO,CAAClB,GAAG,CAAEmB,MAAM,iBACxB7B,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAM8B,OAAO,EAAED,MAAM,CAACX;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADvBO,MAAM,CAACjB,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACnB,EAAA,CA1DQF,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA4DvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}