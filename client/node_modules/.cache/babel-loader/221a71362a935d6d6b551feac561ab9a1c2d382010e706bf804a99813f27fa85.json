{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'./Header';import'./CheckoutPage.css';import{useParams}from'react-router-dom';import ProjectDetails from'./ProjectDetails';import HardwareComponent from'./HardwareComponent';// when page is visited, backend grabs relevant dictionaries\n// from mongo and gives them to client to be displayed\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CheckoutPage(){const{username}=useParams();const[projList,setProjList]=useState({});const[hwList,setHWList]=useState([]);//\nconst[projectIdentifer,setProjectIdentifer]=useState(\"\");const[projectDescription,setProjectDescription]=useState(\"\");const[projectIdentifierJoin,setProjectIdentifierJoin]=useState(\"\");// Holds the project name input for join\nconst[projectNameCreate,setProjectNameCreate]=useState(\"\");//Holds project name for creating\nconst[message,setMessage]=useState(\"\");const createProject=async()=>{try{if(projectIdentifer===\"\"||projectNameCreate===\"\"){setMessage(\"Project identifier and name cannot be empty\");return;}const response=await fetch('/create_project',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({project_name:projectNameCreate,username:username,description:projectDescription,identifier:projectIdentifer})});const result=await response.json();setMessage(result.success||result.error);}catch(error){setMessage(\"Error creating project\");}finally{setProjectNameCreate(\"\");setProjectIdentifer(\"\");setProjectDescription(\"\");}};const joinProject=async()=>{try{const response=await fetch('/project/addUser',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':username,'identifier':projectIdentifierJoin})});const result=await response.json();if(result===2){setMessage(\"Project does not exist\");}else if(result===1){setMessage(\"User already in project\");}else{setMessage(\"Success\");}}catch(error){setMessage(\"Error joining project\");}finally{setProjectIdentifierJoin(\"\");}};useEffect(()=>{const fetchData=async()=>{const projectResponse=await fetch('/home/getAllProjects',{method:'Post',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':username})});const projectjsonData=await projectResponse.json();setProjList(projectjsonData);};const fetchData2=async()=>{const hardwareResponse=await fetch('/home/getAllHardware',{headers:{'Content-Type':'application/json'}});const hardwarejsonData=await hardwareResponse.json();setHWList(hardwarejsonData);};fetchData();fetchData2();});return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"h1\",{children:\"Spacer text, do not delete\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome, \",username]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project ID\",value:projectIdentifer,onChange:e=>setProjectIdentifer(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project Name\",value:projectNameCreate,onChange:e=>setProjectNameCreate(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project Description\",value:projectDescription,onChange:e=>setProjectDescription(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:createProject,children:\"Create New Project\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project Name\",value:projectIdentifierJoin,onChange:e=>setProjectIdentifierJoin(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:joinProject,children:\"Join Project\"})]}),/*#__PURE__*/_jsx(\"p\",{children:message}),\" \",/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Projects\"}),/*#__PURE__*/_jsx(\"div\",{className:\"projects-container\",children:Object.values(projList).map(project=>/*#__PURE__*/_jsx(ProjectDetails,{name:project.name,hardware:project.hardware,members:project.members,description:project.description,identifier:project.identifier,changeMessage:msg=>setMessage(msg)}))})]}),/*#__PURE__*/_jsx(\"div\",{class:\"hardware-section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"hw-set1\",children:hwList.map(hwset=>/*#__PURE__*/_jsx(HardwareComponent,{hardwareName:hwset}))})})]});}export default CheckoutPage;","map":{"version":3,"names":["React","useState","useEffect","Header","useParams","ProjectDetails","HardwareComponent","jsx","_jsx","jsxs","_jsxs","CheckoutPage","username","projList","setProjList","hwList","setHWList","projectIdentifer","setProjectIdentifer","projectDescription","setProjectDescription","projectIdentifierJoin","setProjectIdentifierJoin","projectNameCreate","setProjectNameCreate","message","setMessage","createProject","response","fetch","method","headers","body","JSON","stringify","project_name","description","identifier","result","json","success","error","joinProject","fetchData","projectResponse","projectjsonData","fetchData2","hardwareResponse","hardwarejsonData","style","textAlign","children","type","placeholder","value","onChange","e","target","onClick","className","Object","values","map","project","name","hardware","members","changeMessage","msg","class","hwset","hardwareName"],"sources":["C:/Users/juang/OneDrive/Desktop/SWE LAb/17530_Apple/client/src/components/CheckoutPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport './CheckoutPage.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport ProjectDetails from './ProjectDetails';\r\nimport HardwareComponent from './HardwareComponent';\r\n\r\n// when page is visited, backend grabs relevant dictionaries\r\n// from mongo and gives them to client to be displayed\r\nfunction CheckoutPage() {\r\n  const {username} = useParams();\r\n  const [projList, setProjList] = useState({});\r\n  const [hwList, setHWList] = useState([]);\r\n  //\r\n  const [projectIdentifer, setProjectIdentifer] = useState(\"\");\r\n  const [projectDescription, setProjectDescription] = useState(\"\");\r\n  const [projectIdentifierJoin, setProjectIdentifierJoin] = useState(\"\");  // Holds the project name input for join\r\n  const [projectNameCreate, setProjectNameCreate] = useState(\"\"); //Holds project name for creating\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const createProject = async () => {\r\n    try {\r\n      if (projectIdentifer === \"\" || projectNameCreate === \"\") {\r\n        setMessage(\"Project identifier and name cannot be empty\")\r\n        return\r\n      }\r\n      const response = await fetch('/create_project', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ project_name: projectNameCreate, username: username, description: projectDescription, identifier: projectIdentifer })\r\n      });\r\n      const result = await response.json();\r\n      setMessage(result.success || result.error);\r\n    } catch (error) {\r\n      setMessage(\"Error creating project\");\r\n    } finally {\r\n      setProjectNameCreate(\"\")\r\n      setProjectIdentifer(\"\")\r\n      setProjectDescription(\"\")\r\n    }\r\n  };\r\n\r\n  const joinProject = async () => {\r\n    try {\r\n      const response = await fetch('/project/addUser', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({'username': username, 'identifier': projectIdentifierJoin})\r\n      });\r\n      const result = await response.json();\r\n      if (result === 2) {setMessage(\"Project does not exist\")}\r\n      else if (result === 1) {setMessage(\"User already in project\")}\r\n      else {setMessage(\"Success\")}\r\n    } catch (error) {\r\n      setMessage(\"Error joining project\");\r\n    } finally {\r\n      setProjectIdentifierJoin(\"\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const projectResponse = await fetch('/home/getAllProjects', {method:'Post',\r\n        headers:{'Content-Type': 'application/json'},\r\n        body: JSON.stringify({'username': username})});\r\n      const projectjsonData = await projectResponse.json();\r\n      setProjList(projectjsonData)\r\n    }\r\n    const fetchData2 = async () => {\r\n      const hardwareResponse = await fetch('/home/getAllHardware',\r\n        {headers:{'Content-Type': 'application/json'}}\r\n      );\r\n      const hardwarejsonData = await hardwareResponse.json();\r\n      setHWList(hardwarejsonData)\r\n    }\r\n    fetchData();\r\n    fetchData2();\r\n  });\r\n  \r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Header />\r\n      <h1>Spacer text, do not delete</h1>\r\n      <h1>Welcome, {username}</h1>\r\n      {/* Project Creation Inputs and Button */}\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Project ID\" value={projectIdentifer} onChange={(e) => setProjectIdentifer(e.target.value)}/>\r\n        <input type=\"text\" placeholder=\"Project Name\" value={projectNameCreate} onChange={(e) => setProjectNameCreate(e.target.value)}/>\r\n        <input type=\"text\" placeholder=\"Project Description\" value={projectDescription} onChange={(e) => setProjectDescription(e.target.value)}/>\r\n        <button onClick={createProject}>Create New Project</button>\r\n      </div>\r\n\r\n      {/* Project Join Inputs and Button */}\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Project Name\" value={projectIdentifierJoin} onChange={(e) => setProjectIdentifierJoin(e.target.value)}/>\r\n        <button onClick={joinProject}>Join Project</button>\r\n      </div>\r\n      <p>{message}</p> {/* Display success or error messages */}\r\n      \r\n      {/* Project List */}\r\n      <div>\r\n        <h1>Projects</h1>\r\n        <div className=\"projects-container\">\r\n          {Object.values(projList).map((project) => (\r\n            <ProjectDetails\r\n              name={project.name}\r\n              hardware={project.hardware}\r\n              members={project.members}\r\n              description={project.description}\r\n              identifier={project.identifier}\r\n              changeMessage={(msg) => setMessage(msg)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* Hardware Availability */}\r\n      <div class=\"hardware-section\">\r\n        <div className=\"hw-set1\">\r\n          {hwList.map((hwset) => (\r\n            <HardwareComponent hardwareName={hwset} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}