{"ast":null,"code":"import React,{useEffect,useState}from'react';// Function to fetch available units of a specified hardware set\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getAvailableHardware=async name=>{try{const response=await fetch(`/hardware/${name}/available`,{method:'GET',headers:{'Content-Type':'application/json'}});if(!response.ok){throw new Error(`Error: ${response.statusText}`);}const data=await response.json();return data;}catch(error){console.error('Error fetching available hardware:',error);return null;}};// Main component to display the availability of a hardware set\nconst HardwareComponent=_ref=>{let{hardwareName}=_ref;const[available,setAvailable]=useState(null);useEffect(()=>{const fetchData=async()=>{const availableUnits=await getAvailableHardware(hardwareName);setAvailable(availableUnits);};fetchData();});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:hardwareName}),available!==null?/*#__PURE__*/_jsxs(\"p\",{children:[\"Available Units: \",available]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});};export default HardwareComponent;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","getAvailableHardware","name","response","fetch","method","headers","ok","Error","statusText","data","json","error","console","HardwareComponent","_ref","hardwareName","available","setAvailable","fetchData","availableUnits","children"],"sources":["C:/Users/juang/OneDrive/Desktop/SWE LAb/17530_Apple/client/src/components/HardwareComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Function to fetch available units of a specified hardware set\r\nconst getAvailableHardware = async (name) => {\r\n  try {\r\n    const response = await fetch(`/hardware/${name}/available`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching available hardware:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Main component to display the availability of a hardware set\r\nconst HardwareComponent = ({ hardwareName }) => {\r\n  const [available, setAvailable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const availableUnits = await getAvailableHardware(hardwareName);\r\n      setAvailable(availableUnits);\r\n    };\r\n\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>{hardwareName}</h1>\r\n      {available !== null ? (\r\n        <p>Available Units: {available}</p>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HardwareComponent;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAElD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,oBAAoB,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC3C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,aAAaF,IAAI,YAAY,CAAE,CAC1DG,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,UAAUL,QAAQ,CAACM,UAAU,EAAE,CAAC,CAClD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,MAAO,KAAI,CACb,CACF,CAAC,CAED;AACA,KAAM,CAAAE,iBAAiB,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAEhDD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAnB,oBAAoB,CAACe,YAAY,CAAC,CAC/DE,YAAY,CAACE,cAAc,CAAC,CAC9B,CAAC,CAEDD,SAAS,CAAC,CAAC,CACb,CAAC,CAAC,CAEF,mBACEnB,KAAA,QAAAqB,QAAA,eACEvB,IAAA,OAAAuB,QAAA,CAAKL,YAAY,CAAK,CAAC,CACtBC,SAAS,GAAK,IAAI,cACjBjB,KAAA,MAAAqB,QAAA,EAAG,mBAAiB,CAACJ,SAAS,EAAI,CAAC,cAEnCnB,IAAA,MAAAuB,QAAA,CAAG,YAAU,CAAG,CACjB,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}