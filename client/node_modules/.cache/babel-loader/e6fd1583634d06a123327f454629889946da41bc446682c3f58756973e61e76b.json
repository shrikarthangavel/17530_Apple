{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erict\\\\Documents\\\\GitHub\\\\17530_Apple\\\\client\\\\src\\\\components\\\\HardwareComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Function to fetch available units of a specified hardware set\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAvailableHardware = async name => {\n  try {\n    const response = await fetch(`/hardware/${name}/available`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`Error: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching available hardware:', error);\n    return null;\n  }\n};\n\n// Main component to display the availability of a hardware set\nconst HardwareComponent = ({\n  hardwareName\n}) => {\n  _s();\n  const [available, setAvailable] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const availableUnits = await getAvailableHardware(hardwareName);\n      setAvailable(availableUnits);\n    };\n    fetchData();\n  }, [hardwareName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: hardwareName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), available !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Available Units: \", available]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(HardwareComponent, \"dFaEoYDjbWyqUw/STyiLdAUU3Cc=\");\n_c = HardwareComponent;\nexport default HardwareComponent;\nvar _c;\n$RefreshReg$(_c, \"HardwareComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","getAvailableHardware","name","response","fetch","method","headers","ok","Error","statusText","data","json","error","console","HardwareComponent","hardwareName","_s","available","setAvailable","fetchData","availableUnits","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/erict/Documents/GitHub/17530_Apple/client/src/components/HardwareComponent.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Function to fetch available units of a specified hardware set\r\nconst getAvailableHardware = async (name) => {\r\n  try {\r\n    const response = await fetch(`/hardware/${name}/available`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Error: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching available hardware:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\n// Main component to display the availability of a hardware set\r\nconst HardwareComponent = ({ hardwareName }) => {\r\n  const [available, setAvailable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const availableUnits = await getAvailableHardware(hardwareName);\r\n      setAvailable(availableUnits);\r\n    };\r\n\r\n    fetchData();\r\n  }, [hardwareName]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{hardwareName}</h1>\r\n      {available !== null ? (\r\n        <p>Available Units: {available}</p>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HardwareComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,oBAAoB,GAAG,MAAOC,IAAI,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAaF,IAAI,YAAY,EAAE;MAC1DG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,UAAUL,QAAQ,CAACM,UAAU,EAAE,CAAC;IAClD;IAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,MAAME,iBAAiB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,cAAc,GAAG,MAAMnB,oBAAoB,CAACc,YAAY,CAAC;MAC/DG,YAAY,CAACE,cAAc,CAAC;IAC9B,CAAC;IAEDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,oBACEf,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAKN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtBR,SAAS,KAAK,IAAI,gBACjBjB,OAAA;MAAAqB,QAAA,GAAG,mBAAiB,EAACJ,SAAS;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEnCzB,OAAA;MAAAqB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACT,EAAA,CAtBIF,iBAAiB;AAAAY,EAAA,GAAjBZ,iBAAiB;AAwBvB,eAAeA,iBAAiB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}