{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erict\\\\Documents\\\\GitHub\\\\17530_Apple\\\\client\\\\src\\\\components\\\\ProjectDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport HardwareSet from './HardwareSet';\n\n/*\r\nStructure of a Project entry\r\nProject = {\r\n  'name': name,\r\n  'members': [list of members by username],\r\n  'hardware': {\"HWSET\": #, ...}\r\n  }\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectDetails(props) {\n  _s();\n  const [updatedHardwareSets, setUpdatedHardwareSets] = useState(props.hardware);\n  const [projectMembers, setProjectMembers] = useState(props.members);\n  const [projectName] = useState(props.name);\n  const [newMember, setNewMember] = useState('');\n  const handleAddMember = () => {\n    fetch('/project/addUser', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': newMember,\n        'project': projectName\n      })\n    }).then(response => response.json()).then(result => {\n      if (result == 0) {\n        const updatedMembers = [...projectMembers, newMember];\n        setProjectMembers(updatedMembers);\n        //more feedback, sendmsg?\n      } else {\n        //feedback that add new member failed (user does not exist, already in proj)\n      }\n      setNewMember('');\n    });\n  };\n  const handleRemoveMember = toRemove => {\n    const updatedMembers = projectMembers.filter(member => member !== toRemove);\n    setProjectMembers(updatedMembers);\n  };\n  const handleCheckIn = (hwname, qty) => {\n    const val = updatedHardwareSets[hwname];\n    const updatedHardwareSetsCopy = {\n      ...updatedHardwareSets\n    };\n    updatedHardwareSetsCopy[hwname] = val + qty;\n    setUpdatedHardwareSets(updatedHardwareSetsCopy);\n  };\n  const handleCheckOut = (hwname, qty) => {\n    const val = updatedHardwareSets[hwname];\n    const updatedHardwareSetsCopy = {\n      ...updatedHardwareSets\n    };\n    updatedHardwareSetsCopy[hwname] = val - qty;\n    setUpdatedHardwareSets(updatedHardwareSetsCopy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: projectName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hardware-container\",\n      children: Object.entries(updatedHardwareSets).map(([key, hw]) => /*#__PURE__*/_jsxDEV(HardwareSet, {\n        name: key,\n        val: hw,\n        onCheckIn: qty => handleCheckIn(key, qty),\n        onCheckOut: qty => handleCheckOut(key, qty)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Members:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n      children: projectMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [member, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveMember(member),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMember,\n      onChange: e => setNewMember(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddMember,\n      children: \"Add Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectDetails, \"LsFvhfW7CkvdT00hdbNNNkf/wog=\");\n_c = ProjectDetails;\nexport default ProjectDetails;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetails\");","map":{"version":3,"names":["React","useState","HardwareSet","jsxDEV","_jsxDEV","ProjectDetails","props","_s","updatedHardwareSets","setUpdatedHardwareSets","hardware","projectMembers","setProjectMembers","members","projectName","name","newMember","setNewMember","handleAddMember","fetch","method","headers","body","JSON","stringify","then","response","json","result","updatedMembers","handleRemoveMember","toRemove","filter","member","handleCheckIn","hwname","qty","val","updatedHardwareSetsCopy","handleCheckOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","hw","onCheckIn","onCheckOut","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/erict/Documents/GitHub/17530_Apple/client/src/components/ProjectDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport HardwareSet from './HardwareSet';\r\n\r\n/*\r\nStructure of a Project entry\r\nProject = {\r\n  'name': name,\r\n  'members': [list of members by username],\r\n  'hardware': {\"HWSET\": #, ...}\r\n  }\r\n*/\r\n\r\nfunction ProjectDetails(props) {\r\n  const [updatedHardwareSets, setUpdatedHardwareSets] = useState(props.hardware);\r\n  const [projectMembers, setProjectMembers] = useState(props.members)\r\n  const [projectName] = useState(props.name)\r\n  const [newMember, setNewMember] = useState('');\r\n\r\n  const handleAddMember = () => {\r\n    fetch('/project/addUser', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'username': newMember, 'project': projectName})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) {\r\n        const updatedMembers = [...projectMembers, newMember]\r\n        setProjectMembers(updatedMembers);\r\n        //more feedback, sendmsg?\r\n      } else {\r\n        //feedback that add new member failed (user does not exist, already in proj)\r\n      }\r\n      setNewMember('');\r\n    })\r\n  };\r\n\r\n  const handleRemoveMember = (toRemove) => {\r\n    const updatedMembers = projectMembers.filter(member => member !== toRemove);\r\n    setProjectMembers(updatedMembers);\r\n  };\r\n\r\n  const handleCheckIn = (hwname, qty) => {\r\n    const val = updatedHardwareSets[hwname]\r\n    const updatedHardwareSetsCopy = { ...updatedHardwareSets };\r\n    updatedHardwareSetsCopy[hwname] = val + qty\r\n    setUpdatedHardwareSets(updatedHardwareSetsCopy)\r\n\r\n  };\r\n\r\n  const handleCheckOut = (hwname, qty) => {\r\n    const val = updatedHardwareSets[hwname]\r\n    const updatedHardwareSetsCopy = { ...updatedHardwareSets };\r\n    updatedHardwareSetsCopy[hwname] = val - qty\r\n    setUpdatedHardwareSets(updatedHardwareSetsCopy)\r\n  };\r\n\r\n  return (\r\n    <div className=\"project\">\r\n      <h3>{projectName}</h3>\r\n      <div className=\"hardware-container\">\r\n          {Object.entries(updatedHardwareSets).map(([key, hw]) => (\r\n          <HardwareSet name={key} val={hw} onCheckIn={(qty) => handleCheckIn(key, qty)} onCheckOut={(qty) => handleCheckOut(key, qty)}/>\r\n        ))}\r\n      </div>\r\n      <h4>Members:</h4>\r\n      <list>\r\n        {projectMembers.map((member) => (\r\n          <li>\r\n            {member}\r\n            <button onClick={() => handleRemoveMember(member)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </list>\r\n      <input type=\"text\" value={newMember} onChange={(e) => setNewMember(e.target.value)} />\r\n      <button onClick={handleAddMember}>Add Member</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}