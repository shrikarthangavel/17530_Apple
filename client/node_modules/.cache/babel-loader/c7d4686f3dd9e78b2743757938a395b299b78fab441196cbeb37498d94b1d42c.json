{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juang\\\\OneDrive\\\\Desktop\\\\SWE LAb\\\\17530_Apple\\\\client\\\\src\\\\components\\\\CheckoutPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport './CheckoutPage.css';\nimport { Link, useParams } from 'react-router-dom';\nimport ProjectDetails from './ProjectDetails';\n\n// when page is visited, backend grabs relevant dictionaries\n// from mongo and gives them to client to be displayed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckoutPage() {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [testProj, setTestProj] = useState({\n    name: '',\n    members: [],\n    hardware: [],\n    checkout: []\n  });\n  const [projList, setProjList] = useState({});\n  //\n  const [projectId, setProjectId] = useState(\"\"); // Holds the project ID input\n  const [projectName, setProjectName] = useState(\"\"); // Holds the project name input\n  const [message, setMessage] = useState(\"\");\n  const createProject = async () => {\n    try {\n      const response = await fetch('/create_project', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_id: projectId,\n          project_name: projectName,\n          username\n        })\n      });\n      const result = await response.json();\n      setMessage(result.success || result.error);\n    } catch (error) {\n      setMessage(\"Error creating project\");\n    }\n  };\n  const getProject = async () => {\n    fetch('/home/getProject', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': 'Project 1'\n      }) //replace with proper project name(s) or username to get all?\n    }).then(response => response.json()).then(result => {\n      setTestProj({\n        \"name\": result.name,\n        \"members\": result.members,\n        \"hardware\": result.hardware,\n        \"checkout\": result.checkout\n      });\n      handleAddProjectToList(testProj);\n    });\n  };\n  const handleAddProjectToList = newProj => {\n    setProjList({\n      ...projList,\n      newProj\n    });\n  };\n  const [projects] = useState({\n    1: {\n      name: 'Project Name 1',\n      members: [\"erictu\", \"testuser\"],\n      hardware: {\n        \"HWSet1\": 0,\n        \"HWSet2\": 10\n      }\n    },\n    2: {\n      name: 'Project Name 2',\n      members: [\"erictu\"],\n      hardware: {\n        \"HWSet1\": 0,\n        \"HWSet2\": 1\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project ID\",\n        value: projectId,\n        onChange: e => setProjectId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Name\",\n        value: projectName,\n        onChange: e => setProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProject,\n        children: \"Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hardware-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home/management/checkout/return\",\n      children: \"Return Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-container\",\n        children: Object.values(projList).map((project, index) => /*#__PURE__*/_jsxDEV(ProjectDetails, {\n          name: project.name,\n          hardware: project.hardware,\n          members: project.members\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProject,\n      children: \"TEST GET SINGULAR PROJECT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [testProj.name, \" \", testProj.members.join(\", \"), \" \", JSON.stringify(testProj.hardware), \" \", JSON.stringify(testProj.checkout)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutPage, \"xhQwI3Kp/gzzOxzChqd7HR2z3sw=\", false, function () {\n  return [useParams];\n});\n_c = CheckoutPage;\nexport default CheckoutPage;\nvar _c;\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"names":["React","useState","Header","Link","useParams","ProjectDetails","jsxDEV","_jsxDEV","CheckoutPage","_s","username","testProj","setTestProj","name","members","hardware","checkout","projList","setProjList","projectId","setProjectId","projectName","setProjectName","message","setMessage","createProject","response","fetch","method","headers","body","JSON","stringify","project_id","project_name","result","json","success","error","getProject","then","handleAddProjectToList","newProj","projects","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","className","to","Object","values","map","project","index","join","_c","$RefreshReg$"],"sources":["C:/Users/juang/OneDrive/Desktop/SWE LAb/17530_Apple/client/src/components/CheckoutPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport './CheckoutPage.css'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ProjectDetails from './ProjectDetails';\r\n\r\n// when page is visited, backend grabs relevant dictionaries\r\n// from mongo and gives them to client to be displayed\r\nfunction CheckoutPage() {\r\n  const {username} = useParams();\r\n  const [testProj, setTestProj] = useState({name: '', members: [], hardware: [], checkout: []})\r\n  const [projList, setProjList] = useState({});\r\n  //\r\n  const [projectId, setProjectId] = useState(\"\");  // Holds the project ID input\r\n  const [projectName, setProjectName] = useState(\"\");  // Holds the project name input\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const createProject = async () => {\r\n    try {\r\n      const response = await fetch('/create_project', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ project_id: projectId, project_name: projectName, username })\r\n      });\r\n      const result = await response.json();\r\n      setMessage(result.success || result.error);\r\n    } catch (error) {\r\n      setMessage(\"Error creating project\");\r\n    }\r\n  };\r\n\r\n  const getProject = async () => {\r\n    fetch('/home/getProject', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'name': 'Project 1'}) //replace with proper project name(s) or username to get all?\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      setTestProj({\r\n        \"name\": result.name,\r\n        \"members\": result.members,\r\n        \"hardware\": result.hardware,\r\n        \"checkout\": result.checkout\r\n        })\r\n        handleAddProjectToList(testProj)\r\n    })\r\n  }\r\n\r\n  const handleAddProjectToList = (newProj) => {\r\n    setProjList({...projList, newProj});\r\n  };\r\n\r\n  const [projects] = useState({\r\n    1: {\r\n      name: 'Project Name 1',\r\n      members: [\"erictu\", \"testuser\"],\r\n      hardware: {\r\n        \"HWSet1\": 0,\r\n        \"HWSet2\": 10\r\n      }\r\n    },\r\n    2: {\r\n      name: 'Project Name 2',\r\n      members: [\"erictu\"],\r\n      hardware: {\r\n        \"HWSet1\": 0,\r\n        \"HWSet2\": 1\r\n      }\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Header />\r\n      <h1>Welcome, {username}</h1>\r\n      {/* Project Creation Inputs and Button */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Project ID\"\r\n          value={projectId}\r\n          onChange={(e) => setProjectId(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Project Name\"\r\n          value={projectName}\r\n          onChange={(e) => setProjectName(e.target.value)}\r\n        />\r\n        <button onClick={createProject}>Create New Project</button>\r\n        <p>{message}</p>  {/* Display success or error message */}\r\n      </div>\r\n      \r\n      <div className=\"hardware-container\"></div>\r\n      \r\n      <Link to=\"/home/management/checkout/return\">Return Page</Link>\r\n      \r\n      {/* Project List */}\r\n      <div>\r\n        <h1>Projects</h1>\r\n        <div className=\"projects-container\">\r\n          {Object.values(projList).map((project, index) => (\r\n            <ProjectDetails\r\n              key={index}\r\n              name={project.name}\r\n              hardware={project.hardware}\r\n              members={project.members}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Button to Test Get Singular Project */}\r\n      <button onClick={getProject}>TEST GET SINGULAR PROJECT</button>\r\n      <h1>{testProj.name} {testProj.members.join(\", \")} {JSON.stringify(testProj.hardware)} {JSON.stringify(testProj.checkout)}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}