{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anesw\\\\OneDrive\\\\Desktop\\\\Software_Engineering_Lab_Projects\\\\SWE_LAB_Project\\\\17530_Apple\\\\client\\\\src\\\\components\\\\CheckoutPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from './Header';\nimport './CheckoutPage.css';\nimport { Link, useParams } from 'react-router-dom';\nimport ProjectDetails from './ProjectDetails';\nimport HardwareComponent from './HardwareComponent';\n\n// when page is visited, backend grabs relevant dictionaries\n// from mongo and gives them to client to be displayed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckoutPage() {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [testProj, setTestProj] = useState({\n    name: '',\n    members: [],\n    hardware: [],\n    checkout: []\n  });\n  const [projList, setProjList] = useState({});\n  const [available, setAvailable] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const availableUnits = await getAvailableHardware(hardwareName);\n      setAvailable(availableUnits);\n    };\n    fetchData();\n  }, [hardwareName]);\n  const getAvailableHardware = async name => {\n    try {\n      const response = await fetch(`/hardware/${name}/available`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.statusText}`);\n      }\n      const data = await response.json();\n      return data.available; // Assuming the response structure is { available: number }\n    } catch (error) {\n      console.error('Error fetching available hardware:', error);\n      return null;\n    }\n  };\n  const getProject = async () => {\n    fetch('/home/getProject', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': 'Project 1'\n      }) //replace with proper project name(s) or username to get all?\n    }).then(response => response.json()).then(result => {\n      setTestProj({\n        \"name\": result.name,\n        \"members\": result.members,\n        \"hardware\": result.hardware,\n        \"checkout\": result.checkout\n      });\n      handleAddProjectToList(testProj);\n    });\n  };\n  const handleAddProjectToList = newProj => {\n    setProjList({\n      ...projList,\n      newProj\n    });\n  };\n  const [projects] = useState({\n    1: {\n      name: 'Project Name 1',\n      members: [\"erictu\", \"testuser\"],\n      hardware: {\n        \"HWSet1\": 0,\n        \"HWSet2\": 10\n      }\n    },\n    2: {\n      name: 'Project Name 2',\n      members: [\"erictu\"],\n      hardware: {\n        \"HWSet1\": 0,\n        \"HWSet2\": 1\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      paddingTop: \"80px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home/management/checkout/return\",\n      children: \"Return Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-container\",\n          children: Object.values(projects).map(project => /*#__PURE__*/_jsxDEV(ProjectDetails, {\n            name: project.name,\n            hardware: project.hardware,\n            members: project.members\n          }, project.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"hardware-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hw-set1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"HWSet1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: available\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hw-set2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"HWSet2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HardwareComponent, {\n            hardwareName: \"HWSet1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutPage, \"6Lj7tK1yca6gXVVXNZG64BSvV0g=\", false, function () {\n  return [useParams];\n});\n_c = CheckoutPage;\nexport default CheckoutPage;\nvar _c;\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"names":["React","useEffect","useState","Header","Link","useParams","ProjectDetails","HardwareComponent","jsxDEV","_jsxDEV","CheckoutPage","_s","username","testProj","setTestProj","name","members","hardware","checkout","projList","setProjList","available","setAvailable","fetchData","availableUnits","getAvailableHardware","hardwareName","response","fetch","method","headers","ok","Error","statusText","data","json","error","console","getProject","body","JSON","stringify","then","result","handleAddProjectToList","newProj","projects","style","textAlign","paddingTop","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","Object","values","map","project","class","_c","$RefreshReg$"],"sources":["C:/Users/anesw/OneDrive/Desktop/Software_Engineering_Lab_Projects/SWE_LAB_Project/17530_Apple/client/src/components/CheckoutPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Header from './Header';\r\nimport './CheckoutPage.css'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ProjectDetails from './ProjectDetails';\r\nimport HardwareComponent from './HardwareComponent';\r\n\r\n// when page is visited, backend grabs relevant dictionaries\r\n// from mongo and gives them to client to be displayed\r\nfunction CheckoutPage() {\r\n  const {username} = useParams();\r\n  const [testProj, setTestProj] = useState({name: '', members: [], hardware: [], checkout: []})\r\n  const [projList, setProjList] = useState({});\r\n  const [available, setAvailable] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const availableUnits = await getAvailableHardware(hardwareName)\r\n      setAvailable(availableUnits)\r\n    }\r\n    fetchData()\r\n  }, [hardwareName])\r\n\r\n  const getAvailableHardware = async (name) => {\r\n    try {\r\n      const response = await fetch(`/hardware/${name}/available`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.statusText}`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      return data.available; // Assuming the response structure is { available: number }\r\n    } catch (error) {\r\n      console.error('Error fetching available hardware:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n\r\n  const getProject = async () => {\r\n    fetch('/home/getProject', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'name': 'Project 1'}) //replace with proper project name(s) or username to get all?\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      setTestProj({\r\n        \"name\": result.name,\r\n        \"members\": result.members,\r\n        \"hardware\": result.hardware,\r\n        \"checkout\": result.checkout\r\n        })\r\n        handleAddProjectToList(testProj)\r\n    })\r\n  }\r\n\r\n  const handleAddProjectToList = (newProj) => {\r\n    setProjList({...projList, newProj});\r\n  };\r\n\r\n  const [projects] = useState({\r\n    1: {\r\n      name: 'Project Name 1',\r\n      members: [\"erictu\", \"testuser\"],\r\n      hardware: {\r\n        \"HWSet1\": 0,\r\n        \"HWSet2\": 10\r\n      }\r\n    },\r\n    2: {\r\n      name: 'Project Name 2',\r\n      members: [\"erictu\"],\r\n      hardware: {\r\n        \"HWSet1\": 0,\r\n        \"HWSet2\": 1\r\n      }\r\n    },\r\n  });\r\n  \r\n  return (\r\n    <div style={{ textAlign: \"center\", paddingTop: \"80px\" }}>\r\n      <Header />\r\n      <Link to=\"/home/management/checkout/return\">Return Page</Link>\r\n      <div className=\"main-content\">\r\n        <div className=\"projects-section\">\r\n          <h1>Projects</h1>\r\n          <div className=\"projects-container\">\r\n            {Object.values(projects).map((project) => (\r\n              <ProjectDetails\r\n                key={project.name}\r\n                name={project.name}\r\n                hardware={project.hardware}\r\n                members={project.members}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div class=\"hardware-section\">\r\n          <div className=\"hw-set1\">\r\n            <h1>HWSet1</h1>\r\n            <h2>{available}</h2>\r\n          </div>\r\n          <div className=\"hw-set2\">\r\n            <h1>HWSet2</h1>\r\n            <HardwareComponent hardwareName=\"HWSet1\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default CheckoutPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}