{"ast":null,"code":"import React,{useState,useEffect}from'react';import Header from'./Header';import'./CheckoutPage.css';import{useParams}from'react-router-dom';import ProjectDetails from'./ProjectDetails';// when page is visited, backend grabs relevant dictionaries\n// from mongo and gives them to client to be displayed\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CheckoutPage(){const{username}=useParams();const[projList,setProjList]=useState({});//\nconst[projectIdentifer,setProjectIdentifer]=useState(\"\");const[projectDescription,setProjectDescription]=useState(\"\");const[projectName,setProjectName]=useState(\"\");// Holds the project name input for join\nconst[projectNameCreate,setProjectNameCreate]=useState(\"\");//Holds project name for creating\nconst[message,setMessage]=useState(\"\");const createProject=async()=>{try{if(projectIdentifer==\"\"||projectNameCreate==\"\"){setMessage(\"Project identifier and name cannot be empty\");return;}const response=await fetch('/create_project',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({project_name:projectNameCreate,username:username,description:projectDescription,identifier:projectIdentifer})});const result=await response.json();setMessage(result.success||result.error);}catch(error){setMessage(\"Error creating project\");}finally{setProjectNameCreate(\"\");setProjectIdentifer(\"\");setProjectDescription(\"\");}};const joinProject=async()=>{try{const response=await fetch('/project/addUser',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':username,'project':projectName})});const result=await response.json();if(result==2){setMessage(\"Project does not exist\");}else if(result==1){setMessage(\"User already in project\");}else{setMessage(\"Success\");}}catch(error){setMessage(\"Error joining project\");}finally{setProjectName(\"\");}};useEffect(()=>{const fetchData=async()=>{const response=await fetch('/home/getAllProjects',{method:'Post',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':username})});const jsonData=await response.json();setProjList(jsonData);};fetchData();});return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"h1\",{children:\"Spacer text, do not delete\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome, \",username]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project ID\",value:projectIdentifer,onChange:e=>setProjectIdentifer(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project Name\",value:projectNameCreate,onChange:e=>setProjectNameCreate(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project Description\",value:projectDescription,onChange:e=>setProjectDescription(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:createProject,children:\"Create New Project\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Project Name\",value:projectName,onChange:e=>setProjectName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:joinProject,children:\"Join Project\"})]}),/*#__PURE__*/_jsx(\"p\",{children:message}),\" \",/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Projects\"}),/*#__PURE__*/_jsx(\"div\",{className:\"projects-container\",children:Object.values(projList).map(project=>/*#__PURE__*/_jsx(ProjectDetails,{name:project.name,hardware:project.hardware,members:project.members,description:project.description,identifier:project.identifier,changeMessage:msg=>setMessage(msg)}))})]})]});}export default CheckoutPage;","map":{"version":3,"names":["React","useState","useEffect","Header","useParams","ProjectDetails","jsx","_jsx","jsxs","_jsxs","CheckoutPage","username","projList","setProjList","projectIdentifer","setProjectIdentifer","projectDescription","setProjectDescription","projectName","setProjectName","projectNameCreate","setProjectNameCreate","message","setMessage","createProject","response","fetch","method","headers","body","JSON","stringify","project_name","description","identifier","result","json","success","error","joinProject","fetchData","jsonData","style","textAlign","children","type","placeholder","value","onChange","e","target","onClick","className","Object","values","map","project","name","hardware","members","changeMessage","msg"],"sources":["C:/Users/juang/OneDrive/Desktop/SWE LAb/17530_Apple/client/src/components/CheckoutPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport './CheckoutPage.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport ProjectDetails from './ProjectDetails';\r\n\r\n// when page is visited, backend grabs relevant dictionaries\r\n// from mongo and gives them to client to be displayed\r\nfunction CheckoutPage() {\r\n  const {username} = useParams();\r\n  const [projList, setProjList] = useState({});\r\n  //\r\n  const [projectIdentifer, setProjectIdentifer] = useState(\"\");\r\n  const [projectDescription, setProjectDescription] = useState(\"\");\r\n  const [projectName, setProjectName] = useState(\"\");  // Holds the project name input for join\r\n  const [projectNameCreate, setProjectNameCreate] = useState(\"\"); //Holds project name for creating\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const createProject = async () => {\r\n    try {\r\n      if (projectIdentifer == \"\" || projectNameCreate == \"\") {\r\n        setMessage(\"Project identifier and name cannot be empty\")\r\n        return\r\n      }\r\n      const response = await fetch('/create_project', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ project_name: projectNameCreate, username: username, description: projectDescription, identifier: projectIdentifer })\r\n      });\r\n      const result = await response.json();\r\n      setMessage(result.success || result.error);\r\n    } catch (error) {\r\n      setMessage(\"Error creating project\");\r\n    } finally {\r\n      setProjectNameCreate(\"\")\r\n      setProjectIdentifer(\"\")\r\n      setProjectDescription(\"\")\r\n    }\r\n  };\r\n\r\n  const joinProject = async () => {\r\n    try {\r\n      const response = await fetch('/project/addUser', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({'username': username, 'project': projectName})\r\n      });\r\n      const result = await response.json();\r\n      if (result == 2) {setMessage(\"Project does not exist\")}\r\n      else if (result == 1) {setMessage(\"User already in project\")}\r\n      else {setMessage(\"Success\")}\r\n    } catch (error) {\r\n      setMessage(\"Error joining project\");\r\n    } finally {\r\n      setProjectName(\"\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch('/home/getAllProjects', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'username': username})});\r\n      const jsonData = await response.json();\r\n      setProjList(jsonData)\r\n    }\r\n    fetchData();\r\n  });\r\n  \r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Header />\r\n      <h1>Spacer text, do not delete</h1>\r\n      <h1>Welcome, {username}</h1>\r\n      {/* Project Creation Inputs and Button */}\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Project ID\" value={projectIdentifer} onChange={(e) => setProjectIdentifer(e.target.value)}/>\r\n        <input type=\"text\" placeholder=\"Project Name\" value={projectNameCreate} onChange={(e) => setProjectNameCreate(e.target.value)}/>\r\n        <input type=\"text\" placeholder=\"Project Description\" value={projectDescription} onChange={(e) => setProjectDescription(e.target.value)}/>\r\n        <button onClick={createProject}>Create New Project</button>\r\n      </div>\r\n\r\n      {/* Project Join Inputs and Button */}\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Project Name\" value={projectName} onChange={(e) => setProjectName(e.target.value)}/>\r\n        <button onClick={joinProject}>Join Project</button>\r\n      </div>\r\n      <p>{message}</p> {/* Display success or error message */}\r\n      \r\n      {/* Project List */}\r\n      <div>\r\n        <h1>Projects</h1>\r\n        <div className=\"projects-container\">\r\n          {Object.values(projList).map((project) => (\r\n            <ProjectDetails\r\n              name={project.name}\r\n              hardware={project.hardware}\r\n              members={project.members}\r\n              description={project.description}\r\n              identifier={project.identifier}\r\n              changeMessage={(msg) => setMessage(msg)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}