{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sushi\\\\Downloads\\\\17530_Apple-1\\\\client\\\\src\\\\components\\\\Dropdown.jsx\",\n  _s = $RefreshSig$();\n// 05_ReactDropdownsAndRadioButtons : Creating DropDown component\n// The <DropDownExample> component renders an <input> field, a <button> and a <DropDownComponent>.\n// It consists of two variables: inputVal and itemList.\n// The states of both variables are maintained using the useState hook.\n// The inputVal variable stores the value entered by a user in the <input> field.\n// When the <button> Add Item is clicked, it adds the inputVal to the dropdown.\n// The task is achieved by clicking the button which calls the clickHandler() method.\n// The clickHandler method creates a newList variable.\n// This newList comprises the old list and the newly entered item.\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropDownComponent = props => {\n  const Records = props.list.map(item => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      children: item.itemName\n    }, item.itemName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    children: Records\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 16\n  }, this);\n};\n// The setItemList() method is called to set the itemList to newList.\n// This re-renders the itemList by rendering the <DropDownComponent> component.\n// The <DropDownComponent> takes the itemList as props.\n// The list is then rendered using the <select> and <option> tags.\n// The list is traversed using the map() method and each item is dynamically rendered.\n_c = DropDownComponent;\nconst DropDownExample = () => {\n  _s();\n  const [inputVal, setInputVal] = useState(\"\");\n  const [itemList, setItemList] = useState([{\n    itemName: \"--Select--\"\n  }]);\n  const clickHandler = () => {\n    setInputVal(\"\");\n    const newList = [...itemList, {\n      itemName: inputVal\n    }];\n    setItemList(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"DropDown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter the item...\",\n        value: inputVal,\n        onChange: e => setInputVal(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Add Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DropDownComponent, {\n        list: itemList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(DropDownExample, \"GFhCVXrHEGM7Rwu/++d7LK92/lY=\");\n_c2 = DropDownExample;\nexport default DropDownExample;\nvar _c, _c2;\n$RefreshReg$(_c, \"DropDownComponent\");\n$RefreshReg$(_c2, \"DropDownExample\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","DropDownComponent","props","Records","list","map","item","children","itemName","fileName","_jsxFileName","lineNumber","columnNumber","_c","DropDownExample","_s","inputVal","setInputVal","itemList","setItemList","clickHandler","newList","type","placeholder","value","onChange","e","target","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/sushi/Downloads/17530_Apple-1/client/src/components/Dropdown.jsx"],"sourcesContent":["\r\n// 05_ReactDropdownsAndRadioButtons : Creating DropDown component\r\n// The <DropDownExample> component renders an <input> field, a <button> and a <DropDownComponent>.\r\n// It consists of two variables: inputVal and itemList.\r\n// The states of both variables are maintained using the useState hook.\r\n// The inputVal variable stores the value entered by a user in the <input> field.\r\n// When the <button> Add Item is clicked, it adds the inputVal to the dropdown.\r\n// The task is achieved by clicking the button which calls the clickHandler() method.\r\n// The clickHandler method creates a newList variable.\r\n// This newList comprises the old list and the newly entered item.\r\n\r\n\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst DropDownComponent = (props) => {\r\n    const Records = props.list.map((item) => {\r\n        return <option key={item.itemName}>{item.itemName}</option>;\r\n        });\r\n        return(<select>{Records}</select>);\r\n}\r\n// The setItemList() method is called to set the itemList to newList.\r\n// This re-renders the itemList by rendering the <DropDownComponent> component.\r\n// The <DropDownComponent> takes the itemList as props.\r\n// The list is then rendered using the <select> and <option> tags.\r\n// The list is traversed using the map() method and each item is dynamically rendered.\r\n\r\nconst DropDownExample = () => {\r\n    const [inputVal, setInputVal] = useState(\"\");\r\n    const [itemList, setItemList] = useState([{ itemName: \"--Select--\" }]);\r\n  \r\n    const clickHandler = () => {\r\n      setInputVal(\"\");\r\n      const newList = [...itemList, { itemName: inputVal }];\r\n      setItemList(newList);\r\n    };\r\n    return (\r\n        <div>\r\n          <center>\r\n            <h3>DropDown</h3>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter the item...\"\r\n              value={inputVal}\r\n              onChange={(e) => setInputVal(e.target.value)}\r\n            ></input>\r\n            <br></br>\r\n            <button onClick={clickHandler}>Add Item</button>\r\n            <DropDownComponent list = {itemList}/>\r\n          </center>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n\r\nexport default DropDownExample;          "],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;EACjC,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAK;IACrC,oBAAON,OAAA;MAAAO,QAAA,EAA6BD,IAAI,CAACE;IAAQ,GAA7BF,IAAI,CAACE,QAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyB,CAAC;EAC3D,CAAC,CAAC;EACF,oBAAOZ,OAAA;IAAAO,QAAA,EAASJ;EAAO;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AACzC,CAAC;AACD;AACA;AACA;AACA;AACA;AAAAC,EAAA,GAVMZ,iBAAiB;AAYvB,MAAMa,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,CAAC;IAAEU,QAAQ,EAAE;EAAa,CAAC,CAAC,CAAC;EAEtE,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzBH,WAAW,CAAC,EAAE,CAAC;IACf,MAAMI,OAAO,GAAG,CAAC,GAAGH,QAAQ,EAAE;MAAEV,QAAQ,EAAEQ;IAAS,CAAC,CAAC;IACrDG,WAAW,CAACE,OAAO,CAAC;EACtB,CAAC;EACD,oBACIrB,OAAA;IAAAO,QAAA,eACEP,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBZ,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAER,QAAS;QAChBS,QAAQ,EAAGC,CAAC,IAAKT,WAAW,CAACS,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACTZ,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTZ,OAAA;QAAQ4B,OAAO,EAAER,YAAa;QAAAb,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDZ,OAAA,CAACC,iBAAiB;QAACG,IAAI,EAAIc;MAAS;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACG,EAAA,CAzBAD,eAAe;AAAAe,GAAA,GAAff,eAAe;AA4BrB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}