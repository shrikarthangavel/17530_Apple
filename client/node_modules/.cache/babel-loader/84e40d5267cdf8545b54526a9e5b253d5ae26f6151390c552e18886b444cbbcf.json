{"ast":null,"code":"import React,{useState}from'react';import HardwareSet from'./HardwareSet';/*\r\nStructure of a Project entry\r\nProjectName = {\r\n    'name': name,\r\n    'members': [member1, member2, ...],\r\n    'hardware': {\"hardwareset1\" : #, \r\n                \"hardwareset2\": #, ...},\r\n    'description': \"string description\",\r\n    'identifier': \"unique string identifier\"\r\n}\r\n*/import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function ProjectDetails(props){const[updatedHardwareSets,setUpdatedHardwareSets]=useState(props.hardware);const[projectMembers,setProjectMembers]=useState(props.members);const[projectDescription]=useState(props.description);const[projectIdentifer]=useState(props.identifier);const[projectName]=useState(props.name);const[newMember,setNewMember]=useState('');const handleAddMember=()=>{fetch('/project/addUser',{method:'Post',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':newMember,'project':projectName})}).then(response=>response.json()).then(result=>{if(result==0){const updatedMembers=[...projectMembers,newMember];setProjectMembers(updatedMembers);props.changeMessage(`${newMember} has been added`);}else{//feedback that add new member failed (user does not exist, already in proj)\nprops.changeMessage(`could not add ${newMember} to project`);}setNewMember('');});};const handleRemoveMember=toRemove=>{fetch('/project/removeUser',{method:'Post',headers:{'Content-Type':'application/json'},body:JSON.stringify({'username':toRemove,'project':projectName})}).then(response=>response.json()).then(result=>{if(result==0){const updatedMembers=projectMembers.filter(member=>member!==toRemove);setProjectMembers(updatedMembers);props.changeMessage(`${toRemove} has been removed`);}else{props.changeMessage(`could not remove ${newMember} from project`);}});};const handleCheckIn=(hwname,qty)=>{fetch('/project/checkIn',{method:'Post',headers:{'Content-Type':'application/json'},body:JSON.stringify({'project':projectName,'hardware':hwname,'qty':qty})}).then(response=>response.json()).then(result=>{if(result==0){//success\nconst val=updatedHardwareSets[hwname];const updatedHardwareSetsCopy={...updatedHardwareSets};updatedHardwareSetsCopy[hwname]=val-qty;setUpdatedHardwareSets(updatedHardwareSetsCopy);props.changeMessage(`successfully checked in ${qty} ${hwname}`);}else{//failure\nprops.changeMessage(`could not check in ${qty} of ${hwname}`);}});};const handleCheckOut=(hwname,qty)=>{fetch('/project/checkOut',{method:'Post',headers:{'Content-Type':'application/json'},body:JSON.stringify({'project':projectName,'hardware':hwname,'qty':qty})}).then(response=>response.json()).then(result=>{if(result==0){//success\nconst val=updatedHardwareSets[hwname];const updatedHardwareSetsCopy={...updatedHardwareSets};updatedHardwareSetsCopy[hwname]=val+qty;setUpdatedHardwareSets(updatedHardwareSetsCopy);props.changeMessage(`successfully checked out ${qty} ${hwname}`);}else{//failure\nprops.changeMessage(`could not check out ${qty} of ${hwname}`);}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"project\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Name: \",projectName]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Identifier: \",projectIdentifer]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Description: \",projectDescription]}),/*#__PURE__*/_jsx(\"div\",{className:\"hardware-container\",children:Object.entries(updatedHardwareSets).map(_ref=>{let[key,hw]=_ref;return/*#__PURE__*/_jsx(HardwareSet,{name:key,val:hw,onCheckIn:qty=>handleCheckIn(key,qty),onCheckOut:qty=>handleCheckOut(key,qty)});})}),/*#__PURE__*/_jsx(\"h4\",{children:\"Members:\"}),/*#__PURE__*/_jsx(\"list\",{children:projectMembers.map(member=>/*#__PURE__*/_jsxs(\"li\",{children:[member,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveMember(member),children:\"Remove\"})]}))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMember,onChange:e=>setNewMember(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddMember,children:\"Add Member\"})]});}export default ProjectDetails;","map":{"version":3,"names":["React","useState","HardwareSet","jsxs","_jsxs","jsx","_jsx","ProjectDetails","props","updatedHardwareSets","setUpdatedHardwareSets","hardware","projectMembers","setProjectMembers","members","projectDescription","description","projectIdentifer","identifier","projectName","name","newMember","setNewMember","handleAddMember","fetch","method","headers","body","JSON","stringify","then","response","json","result","updatedMembers","changeMessage","handleRemoveMember","toRemove","filter","member","handleCheckIn","hwname","qty","val","updatedHardwareSetsCopy","handleCheckOut","className","children","Object","entries","map","_ref","key","hw","onCheckIn","onCheckOut","onClick","type","value","onChange","e","target"],"sources":["C:/Users/juang/OneDrive/Desktop/SWE LAb/17530_Apple/client/src/components/ProjectDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport HardwareSet from './HardwareSet';\r\n\r\n/*\r\nStructure of a Project entry\r\nProjectName = {\r\n    'name': name,\r\n    'members': [member1, member2, ...],\r\n    'hardware': {\"hardwareset1\" : #, \r\n                \"hardwareset2\": #, ...},\r\n    'description': \"string description\",\r\n    'identifier': \"unique string identifier\"\r\n}\r\n*/\r\n\r\nfunction ProjectDetails(props) {\r\n  const [updatedHardwareSets, setUpdatedHardwareSets] = useState(props.hardware);\r\n  const [projectMembers, setProjectMembers] = useState(props.members);\r\n  const [projectDescription] = useState(props.description);\r\n  const [projectIdentifer] = useState(props.identifier);\r\n  const [projectName] = useState(props.name);\r\n  const [newMember, setNewMember] = useState('');\r\n\r\n  const handleAddMember = () => {\r\n    fetch('/project/addUser', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'username': newMember, 'project': projectName})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) {\r\n        const updatedMembers = [...projectMembers, newMember]\r\n        setProjectMembers(updatedMembers);\r\n        props.changeMessage(`${newMember} has been added`)\r\n      } else {\r\n        //feedback that add new member failed (user does not exist, already in proj)\r\n        props.changeMessage(`could not add ${newMember} to project`)\r\n      }\r\n      setNewMember('');\r\n    })\r\n  };\r\n\r\n  const handleRemoveMember = (toRemove) => {\r\n    fetch('/project/removeUser', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'username': toRemove, 'project': projectName})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) {\r\n        const updatedMembers = projectMembers.filter(member => member !== toRemove);\r\n        setProjectMembers(updatedMembers);\r\n        props.changeMessage(`${toRemove} has been removed`)\r\n      } else {\r\n        props.changeMessage(`could not remove ${newMember} from project`)\r\n      }\r\n    })\r\n  };\r\n\r\n  const handleCheckIn = (hwname, qty) => { \r\n    fetch('/project/checkIn', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'project': projectName, 'hardware': hwname, 'qty': qty})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) { //success\r\n        const val = updatedHardwareSets[hwname]\r\n        const updatedHardwareSetsCopy = { ...updatedHardwareSets };\r\n        updatedHardwareSetsCopy[hwname] = val - qty\r\n        setUpdatedHardwareSets(updatedHardwareSetsCopy)\r\n        props.changeMessage(`successfully checked in ${qty} ${hwname}`)\r\n      } else {  //failure\r\n        props.changeMessage(`could not check in ${qty} of ${hwname}`)\r\n      }\r\n    })\r\n  };\r\n\r\n  const handleCheckOut = (hwname, qty) => {\r\n    fetch('/project/checkOut', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'project': projectName, 'hardware': hwname, 'qty': qty})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) { //success\r\n        const val = updatedHardwareSets[hwname]\r\n        const updatedHardwareSetsCopy = { ...updatedHardwareSets };\r\n        updatedHardwareSetsCopy[hwname] = val + qty\r\n        setUpdatedHardwareSets(updatedHardwareSetsCopy)\r\n        props.changeMessage(`successfully checked out ${qty} ${hwname}`)\r\n      } else {  //failure\r\n        props.changeMessage(`could not check out ${qty} of ${hwname}`)\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"project\">\r\n      <h3>Name: {projectName}</h3>\r\n      <h4>Identifier: {projectIdentifer}</h4>\r\n      <p>Description: {projectDescription}</p>\r\n      <div className=\"hardware-container\">\r\n          {Object.entries(updatedHardwareSets).map(([key, hw]) => (\r\n          <HardwareSet name={key} val={hw} onCheckIn={(qty) => handleCheckIn(key, qty)} onCheckOut={(qty) => handleCheckOut(key, qty)}/>\r\n        ))}\r\n      </div>\r\n      <h4>Members:</h4>\r\n      <list>\r\n        {projectMembers.map((member) => (\r\n          <li>\r\n            {member}\r\n            <button onClick={() => handleRemoveMember(member)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </list>\r\n      <input type=\"text\" value={newMember} onChange={(e) => setNewMember(e.target.value)} />\r\n      <button onClick={handleAddMember}>Add Member</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}