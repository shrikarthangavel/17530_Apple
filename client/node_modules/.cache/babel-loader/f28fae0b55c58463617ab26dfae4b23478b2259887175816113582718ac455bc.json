{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erict\\\\Documents\\\\GitHub\\\\17530_Apple\\\\client\\\\src\\\\components\\\\ProjectDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport HardwareSet from './HardwareSet';\n\n/*\r\nStructure of a Project entry\r\nProjectName = {\r\n    'name': name,\r\n    'members': [member1, member2, ...],\r\n    'hardware': {\"hardwareset1\" : #, \r\n                \"hardwareset2\": #, ...},\r\n    'description': \"string description\",\r\n    'identifier': \"unique string identifier\"\r\n}\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectDetails(props) {\n  _s();\n  const [updatedHardwareSets, setUpdatedHardwareSets] = useState(props.hardware);\n  const [projectMembers, setProjectMembers] = useState(props.members);\n  const [projectDescription] = useState(props.description);\n  const [projectIdentifer] = useState(props.identifier);\n  const [projectName] = useState(props.name);\n  const [newMember, setNewMember] = useState('');\n  const handleAddMember = () => {\n    fetch('/project/addUser', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': newMember,\n        'project': projectName\n      })\n    }).then(response => response.json()).then(result => {\n      if (result == 0) {\n        const updatedMembers = [...projectMembers, newMember];\n        setProjectMembers(updatedMembers);\n        props.changeMessage(`${newMember} has been added`);\n      } else {\n        //feedback that add new member failed (user does not exist, already in proj)\n        props.changeMessage(`could not add ${newMember} to project`);\n      }\n      setNewMember('');\n    });\n  };\n  const handleRemoveMember = toRemove => {\n    //add handle with mongo\n    fetch('/project/removeUser', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'username': toRemove,\n        'project': projectName\n      })\n    }).then(response => response.json()).then(result => {\n      if (result == 0) {\n        const updatedMembers = projectMembers.filter(member => member !== toRemove);\n        setProjectMembers(updatedMembers);\n        props.changeMessage(`${toRemove} has been removed`);\n      } else {\n        props.changeMessage(`could not remove ${newMember} from project`);\n      }\n    });\n  };\n  const handleCheckIn = (hwname, qty) => {\n    //add handle with mongo\n    fetch('/project/checkIn', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'project': projectName,\n        'hardware': hwname,\n        'qty': qty\n      })\n    }).then(response => response.json()).then(result => {\n      if (result == 0) {\n        //success\n        const val = updatedHardwareSets[hwname];\n        const updatedHardwareSetsCopy = {\n          ...updatedHardwareSets\n        };\n        updatedHardwareSetsCopy[hwname] = val + qty;\n        setUpdatedHardwareSets(updatedHardwareSetsCopy);\n      } else {\n        //failure\n        props.changeMessage(`could not check in ${qty} of ${hwname}`);\n      }\n    });\n  };\n  const handleCheckOut = (hwname, qty) => {\n    //add handle with mongo\n    fetch('/project/checkOut', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'project': projectName,\n        'hardware': hwname,\n        'qty': qty\n      })\n    }).then(response => response.json()).then(result => {\n      if (result == 0) {\n        //success\n        const val = updatedHardwareSets[hwname];\n        const updatedHardwareSetsCopy = {\n          ...updatedHardwareSets\n        };\n        updatedHardwareSetsCopy[hwname] = val - qty;\n        setUpdatedHardwareSets(updatedHardwareSetsCopy);\n      } else {\n        //failure\n        props.changeMessage(`could not check out ${qty} of ${hwname}`);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Name: \", projectName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Identifier: \", projectIdentifer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", projectDescription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hardware-container\",\n      children: Object.entries(updatedHardwareSets).map(([key, hw]) => /*#__PURE__*/_jsxDEV(HardwareSet, {\n        name: key,\n        val: hw,\n        onCheckIn: qty => handleCheckIn(key, qty),\n        onCheckOut: qty => handleCheckOut(key, qty)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Members:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n      children: projectMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [member, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveMember(member),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMember,\n      onChange: e => setNewMember(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddMember,\n      children: \"Add Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectDetails, \"l2o6+ne0+R8L5IchL5Payc1laIw=\");\n_c = ProjectDetails;\nexport default ProjectDetails;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetails\");","map":{"version":3,"names":["React","useState","HardwareSet","jsxDEV","_jsxDEV","ProjectDetails","props","_s","updatedHardwareSets","setUpdatedHardwareSets","hardware","projectMembers","setProjectMembers","members","projectDescription","description","projectIdentifer","identifier","projectName","name","newMember","setNewMember","handleAddMember","fetch","method","headers","body","JSON","stringify","then","response","json","result","updatedMembers","changeMessage","handleRemoveMember","toRemove","filter","member","handleCheckIn","hwname","qty","val","updatedHardwareSetsCopy","handleCheckOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","key","hw","onCheckIn","onCheckOut","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/erict/Documents/GitHub/17530_Apple/client/src/components/ProjectDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport HardwareSet from './HardwareSet';\r\n\r\n/*\r\nStructure of a Project entry\r\nProjectName = {\r\n    'name': name,\r\n    'members': [member1, member2, ...],\r\n    'hardware': {\"hardwareset1\" : #, \r\n                \"hardwareset2\": #, ...},\r\n    'description': \"string description\",\r\n    'identifier': \"unique string identifier\"\r\n}\r\n*/\r\n\r\nfunction ProjectDetails(props) {\r\n  const [updatedHardwareSets, setUpdatedHardwareSets] = useState(props.hardware);\r\n  const [projectMembers, setProjectMembers] = useState(props.members);\r\n  const [projectDescription] = useState(props.description);\r\n  const [projectIdentifer] = useState(props.identifier);\r\n  const [projectName] = useState(props.name);\r\n  const [newMember, setNewMember] = useState('');\r\n\r\n  const handleAddMember = () => {\r\n    fetch('/project/addUser', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'username': newMember, 'project': projectName})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) {\r\n        const updatedMembers = [...projectMembers, newMember]\r\n        setProjectMembers(updatedMembers);\r\n        props.changeMessage(`${newMember} has been added`)\r\n      } else {\r\n        //feedback that add new member failed (user does not exist, already in proj)\r\n        props.changeMessage(`could not add ${newMember} to project`)\r\n      }\r\n      setNewMember('');\r\n    })\r\n  };\r\n\r\n  const handleRemoveMember = (toRemove) => { //add handle with mongo\r\n    fetch('/project/removeUser', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'username': toRemove, 'project': projectName})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) {\r\n        const updatedMembers = projectMembers.filter(member => member !== toRemove);\r\n        setProjectMembers(updatedMembers);\r\n        props.changeMessage(`${toRemove} has been removed`)\r\n      } else {\r\n        props.changeMessage(`could not remove ${newMember} from project`)\r\n      }\r\n    })\r\n  };\r\n\r\n  const handleCheckIn = (hwname, qty) => {  //add handle with mongo\r\n    fetch('/project/checkIn', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'project': projectName, 'hardware': hwname, 'qty': qty})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) { //success\r\n        const val = updatedHardwareSets[hwname]\r\n        const updatedHardwareSetsCopy = { ...updatedHardwareSets };\r\n        updatedHardwareSetsCopy[hwname] = val + qty\r\n        setUpdatedHardwareSets(updatedHardwareSetsCopy)\r\n      } else {  //failure\r\n        props.changeMessage(`could not check in ${qty} of ${hwname}`)\r\n      }\r\n    })\r\n  };\r\n\r\n  const handleCheckOut = (hwname, qty) => { //add handle with mongo\r\n    fetch('/project/checkOut', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'project': projectName, 'hardware': hwname, 'qty': qty})\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      if (result == 0) { //success\r\n        const val = updatedHardwareSets[hwname]\r\n        const updatedHardwareSetsCopy = { ...updatedHardwareSets };\r\n        updatedHardwareSetsCopy[hwname] = val - qty\r\n        setUpdatedHardwareSets(updatedHardwareSetsCopy)\r\n      } else {  //failure\r\n        props.changeMessage(`could not check out ${qty} of ${hwname}`)\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"project\">\r\n      <h3>Name: {projectName}</h3>\r\n      <h4>Identifier: {projectIdentifer}</h4>\r\n      <p>Description: {projectDescription}</p>\r\n      <div className=\"hardware-container\">\r\n          {Object.entries(updatedHardwareSets).map(([key, hw]) => (\r\n          <HardwareSet name={key} val={hw} onCheckIn={(qty) => handleCheckIn(key, qty)} onCheckOut={(qty) => handleCheckOut(key, qty)}/>\r\n        ))}\r\n      </div>\r\n      <h4>Members:</h4>\r\n      <list>\r\n        {projectMembers.map((member) => (\r\n          <li>\r\n            {member}\r\n            <button onClick={() => handleRemoveMember(member)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </list>\r\n      <input type=\"text\" value={newMember} onChange={(e) => setNewMember(e.target.value)} />\r\n      <button onClick={handleAddMember}>Add Member</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}