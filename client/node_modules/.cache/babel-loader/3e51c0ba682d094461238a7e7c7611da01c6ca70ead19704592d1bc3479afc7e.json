{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erict\\\\Documents\\\\GitHub\\\\17530_Apple\\\\client\\\\src\\\\components\\\\CheckoutPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport './CheckoutPage.css';\nimport { Link, useParams } from 'react-router-dom';\nimport ProjectDetails from './ProjectDetails';\n\n// when page is visited, backend grabs relevant dictionaries\n// from mongo and gives them to client to be displayed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckoutPage() {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [testProj, setTestProj] = useState({\n    name: '',\n    members: [],\n    hardware: []\n  });\n  const [projList, setProjList] = useState({});\n  //\n  const [projectName, setProjectName] = useState(\"\"); // Holds the project name input\n  const [message, setMessage] = useState(\"\");\n  const createProject = async () => {\n    try {\n      const response = await fetch('/create_project', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          project_name: projectName,\n          username: username\n        })\n      });\n      const result = await response.json();\n      setMessage(result.success || result.error);\n      setProjectName(\"\");\n    } catch (error) {\n      setMessage(\"Error creating project\");\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('/home/getAllProjects', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'username': username\n        })\n      });\n      const jsonData = await response.json();\n      setProjList(jsonData);\n    };\n    fetchData();\n  }, []);\n  const getProject = async () => {\n    fetch('/home/getProject', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': 'Project 1'\n      }) //replace with proper project name(s) or username to get all?\n    }).then(response => response.json()).then(result => {\n      setTestProj({\n        \"name\": result.name,\n        \"members\": result.members,\n        \"hardware\": result.hardware\n      });\n      handleAddProjectToList(testProj);\n    });\n  };\n  const handleAddProjectToList = newProj => {\n    setProjList({\n      ...projList,\n      newProj\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spacer text, do not delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Name\",\n        value: projectName,\n        onChange: e => setProjectName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProject,\n        children: \"Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hardware-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-container\",\n        children: Object.values(projList).map(project => /*#__PURE__*/_jsxDEV(ProjectDetails, {\n          name: project.name,\n          hardware: project.hardware,\n          members: project.members\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutPage, \"9RSqNMamBKFYR2MwdGovx+G7NwY=\", false, function () {\n  return [useParams];\n});\n_c = CheckoutPage;\nexport default CheckoutPage;\nvar _c;\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","Link","useParams","ProjectDetails","jsxDEV","_jsxDEV","CheckoutPage","_s","username","testProj","setTestProj","name","members","hardware","projList","setProjList","projectName","setProjectName","message","setMessage","createProject","response","fetch","method","headers","body","JSON","stringify","project_name","result","json","success","error","fetchData","jsonData","getProject","then","handleAddProjectToList","newProj","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","className","Object","values","map","project","_c","$RefreshReg$"],"sources":["C:/Users/erict/Documents/GitHub/17530_Apple/client/src/components/CheckoutPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport './CheckoutPage.css'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ProjectDetails from './ProjectDetails';\r\n\r\n// when page is visited, backend grabs relevant dictionaries\r\n// from mongo and gives them to client to be displayed\r\nfunction CheckoutPage() {\r\n  const {username} = useParams();\r\n  const [testProj, setTestProj] = useState({name: '', members: [], hardware: []})\r\n  const [projList, setProjList] = useState({});\r\n  //\r\n  const [projectName, setProjectName] = useState(\"\");  // Holds the project name input\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const createProject = async () => {\r\n    try {\r\n      const response = await fetch('/create_project', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ project_name: projectName, username: username })\r\n      });\r\n      const result = await response.json();\r\n      setMessage(result.success || result.error);\r\n      setProjectName(\"\")\r\n    } catch (error) {\r\n      setMessage(\"Error creating project\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch('/home/getAllProjects', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'username': username})});\r\n      const jsonData = await response.json();\r\n      setProjList(jsonData)\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  const getProject = async () => {\r\n    fetch('/home/getProject', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'name': 'Project 1'}) //replace with proper project name(s) or username to get all?\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      setTestProj({\r\n        \"name\": result.name,\r\n        \"members\": result.members,\r\n        \"hardware\": result.hardware,\r\n        })\r\n        handleAddProjectToList(testProj)\r\n    })\r\n  }\r\n\r\n  const handleAddProjectToList = (newProj) => {\r\n    setProjList({...projList, newProj});\r\n  };\r\n  \r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <Header />\r\n      <h1>Spacer text, do not delete</h1>\r\n      <h1>Welcome, {username}</h1>\r\n      {/* Project Creation Inputs and Button */}\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Project Name\" value={projectName} onChange={(e) => setProjectName(e.target.value)}/>\r\n        <button onClick={createProject}>Create New Project</button>\r\n        <p>{message}</p>  {/* Display success or error message */}\r\n      </div>\r\n      \r\n      <div className=\"hardware-container\"></div>\r\n      \r\n      {/* Project List */}\r\n      <div>\r\n        <h1>Projects</h1>\r\n        <div className=\"projects-container\">\r\n          {Object.values(projList).map((project) => (\r\n            <ProjectDetails\r\n              name={project.name}\r\n              hardware={project.hardware}\r\n              members={project.members}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}