{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anesw\\\\OneDrive\\\\Desktop\\\\Software_Engineering_Lab_Projects\\\\SWE_LAB_Project\\\\17530_Apple\\\\client\\\\src\\\\components\\\\CheckoutPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './Header';\nimport './CheckoutPage.css';\nimport { Link, useParams } from 'react-router-dom';\nimport ProjectDetails from './ProjectDetails';\n\n// when page is visited, backend grabs relevant dictionaries\n// from mongo and gives them to client to be displayed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CheckoutPage() {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [testProj, setTestProj] = useState({\n    name: '',\n    members: [],\n    hardware: [],\n    checkout: []\n  });\n  const [projList, setProjList] = useState({});\n  const getProject = async () => {\n    fetch('/home/getProject', {\n      method: 'Post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        'name': 'Project 1'\n      }) //replace with proper project name(s) or username to get all?\n    }).then(response => response.json()).then(result => {\n      setTestProj({\n        \"name\": result.name,\n        \"members\": result.members,\n        \"hardware\": result.hardware,\n        \"checkout\": result.checkout\n      });\n      handleAddProjectToList(testProj);\n    });\n  };\n  const handleAddProjectToList = newProj => {\n    setProjList({\n      ...projList,\n      newProj\n    });\n  };\n  const [projects] = useState({\n    //replace to fill with project data from DB\n    1: {\n      id: 1,\n      name: 'Project Name 1',\n      members: [{\n        id: 1,\n        name: 'a'\n      }, {\n        id: 2,\n        name: 'b'\n      }],\n      hardwareSets: [{\n        id: 1,\n        number: 1,\n        status: 50\n      }, {\n        id: 2,\n        number: 2,\n        status: 0\n      }]\n    },\n    2: {\n      id: 2,\n      name: 'Project Name 2',\n      members: [{\n        id: 3,\n        name: 'x'\n      }, {\n        id: 4,\n        name: 'y'\n      }, {\n        id: 5,\n        name: 'z'\n      }],\n      hardwareSets: [{\n        id: 3,\n        number: 1,\n        status: 20\n      }, {\n        id: 4,\n        number: 2,\n        status: 30\n      }]\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"W\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hardware-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home/management/checkout/return\",\n      children: \"Return Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-container\",\n        children: [/*#__PURE__*/_jsxDEV(ProjectDetails, {\n          name: project.name,\n          hardware: project.hardware,\n          members: project.members\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), \"// ))}\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getProject,\n      children: \"TEST GET SINGULAR PROJECT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [testProj.name, \" \", testProj.members, \" \", testProj.hardware, \" \", testProj.checkout]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutPage, \"urhzOLsJCxUGRmdOZeQd2z1MWYo=\", false, function () {\n  return [useParams];\n});\n_c = CheckoutPage;\nexport default CheckoutPage;\nvar _c;\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"names":["React","useState","Header","Link","useParams","ProjectDetails","jsxDEV","_jsxDEV","CheckoutPage","_s","username","testProj","setTestProj","name","members","hardware","checkout","projList","setProjList","getProject","fetch","method","headers","body","JSON","stringify","then","response","json","result","handleAddProjectToList","newProj","projects","id","hardwareSets","number","status","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","project","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anesw/OneDrive/Desktop/Software_Engineering_Lab_Projects/SWE_LAB_Project/17530_Apple/client/src/components/CheckoutPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from './Header';\r\nimport './CheckoutPage.css'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport ProjectDetails from './ProjectDetails';\r\n\r\n// when page is visited, backend grabs relevant dictionaries\r\n// from mongo and gives them to client to be displayed\r\nfunction CheckoutPage() {\r\n  const {username} = useParams();\r\n  const [testProj, setTestProj] = useState({name: '', members: [], hardware: [], checkout: []})\r\n  const [projList, setProjList] = useState({});\r\n\r\n\r\n  const getProject = async () => {\r\n    fetch('/home/getProject', {method:'Post',\r\n      headers:{'Content-Type': 'application/json'},\r\n      body: JSON.stringify({'name': 'Project 1'}) //replace with proper project name(s) or username to get all?\r\n    }).then(response => response.json())\r\n    .then(result => {\r\n      setTestProj({\r\n        \"name\": result.name,\r\n        \"members\": result.members,\r\n        \"hardware\": result.hardware,\r\n        \"checkout\": result.checkout\r\n        })\r\n        handleAddProjectToList(testProj)\r\n    })\r\n  }\r\n\r\n  const handleAddProjectToList = (newProj) => {\r\n    setProjList({...projList, newProj});\r\n  };\r\n\r\n  const [projects] = useState({   //replace to fill with project data from DB\r\n    1: {\r\n      id: 1,\r\n      name: 'Project Name 1',\r\n      members: [\r\n        { id: 1, name: 'a' },\r\n        { id: 2, name: 'b' },\r\n      ],\r\n      hardwareSets: [\r\n        { id: 1, number: 1, status: 50 },\r\n        { id: 2, number: 2, status: 0 },\r\n      ],\r\n    },\r\n    2: {\r\n      id: 2,\r\n      name: 'Project Name 2',\r\n      members: [\r\n        { id: 3, name: 'x' },\r\n        { id: 4, name: 'y' },\r\n        { id: 5, name: 'z' }\r\n      ],\r\n      hardwareSets: [\r\n        { id: 3, number: 1, status: 20 },\r\n        { id: 4, number: 2, status: 30 },\r\n      ],\r\n    },\r\n  });\r\n  \r\n    return (\r\n    <div style={{textAlign:\"center\"}}>\r\n      <Header />\r\n      <h1>W</h1>\r\n      <h1>{username}</h1>\r\n      <div className = \"hardware-container\">\r\n      </div>\r\n      <Link to=\"/home/management/checkout/return\">Return Page</Link>\r\n      <div>\r\n        <h1>Projects</h1>\r\n          <div className=\"projects-container\">\r\n            {/* {Object.values(projList).map((project) => ( */}\r\n              <ProjectDetails name={project.name} hardware={project.hardware} members={project.members} />\r\n          // ))}\r\n          </div>\r\n      </div>\r\n      <button onClick={getProject}>TEST GET SINGULAR PROJECT</button>\r\n      <h1>{testProj.name} {testProj.members} {testProj.hardware} {testProj.checkout}</h1>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CheckoutPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}